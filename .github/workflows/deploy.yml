name: Build and deploy app

on:
  push:
    branches: ['main']
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build -t wevisdemo/politigraph .
      - name: Save image
        run: docker save wevisdemo/politigraph | gzip > politigraph-image.tar.gz
      - name: Upload image and configs to server
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -azvP --chown=bot:deployer --chmod=g+w
          path: politigraph-image.tar.gz compose.yml compose.server.yml nginx.conf
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: bot
          remote_key: ${{ secrets.SSH_KEY }}
          remote_path: ${{ secrets.SSH_APP_DIR }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Update server containers
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: bot
          key: ${{ secrets.SSH_KEY }}
          script: |
            #!/usr/bin/env bash
            set -e
            cd ${{ secrets.SSH_APP_DIR }}
            docker image tag wevisdemo/politigraph:latest wevisdemo/politigraph:previous
            docker load --input politigraph-image.tar.gz
            docker compose -f compose.server.yml up -d
            docker compose -f compose.server.yml restart nginx
            docker container prune --force
            docker image prune --all --force --filter "until=72h"
